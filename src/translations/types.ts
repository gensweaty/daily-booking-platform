
export type Language = 'en' | 'es' | 'ka';

export type TranslationType = {
  nav: {
    signin: string;
    startJourney: string;
    contact: string;
  };
  hero: {
    title: string;
    subtitle: string;
    description: string;
  };
  features: {
    title: string;
    mainTitle: string;
    booking: string;
    tasks: string;
    crm: string;
    analytics: string;
    website: string;
    ownBookingWebsite: string;
    businessTitle: string;
    smartAppointment: string;
    automatedAnalytics: string;
    modernCRM: string;
    kanbanManagement: string;
  };
  booking: {
    title: string;
    description: string;
    feature1: string;
    feature2: string;
    feature3: string;
    feature4: string;
    feature5: string;
    requestSubmitted: string;
    requestSubmittedDescription: string;
    yourEmailPlaceholder: string;
    bookAppointment: string;
    requestApproved: string;
    newRequest: string;
  };
  analytics: {
    title: string;
    description: string;
    feature1: string;
    feature2: string;
    feature3: string;
    feature4: string;
    feature5: string;
  };
  crm: {
    title: string;
    description: string;
    feature1: string;
    feature2: string;
    feature3: string;
    feature4: string;
    feature5: string;
    notPaid: string;
    paidPartly: string;
    paidFully: string;
    newCustomer: string;
    fullNameRequired: string;
    fullNamePlaceholder: string;
    phoneNumber: string;
    phoneNumberPlaceholder: string;
    socialLinkEmail: string;
    socialLinkEmailPlaceholder: string;
    createEventForCustomer: string;
    customerFromEvent: string;
    paymentStatus: string;
    paymentAmount: string;
    selectPaymentStatus: string;
    comment: string;
    commentPlaceholder: string;
    create: string;
    cancel: string;
    addCustomer: string;
    editCustomer: string;
    update: string;
    dates: string;
    actions: string;
    customersPerPage: string;
    noCustomers: string;
    noCustomersDescription: string;
    refreshing: string;
    yes: string;
    no: string;
    copiedToClipboard: string;
    copyError: string;
    deleteSuccess: string;
    deleteError: string;
    missingUserInfo: string;
    customerCreated: string;
    customerUpdated: string;
    customerDeleted: string;
    noDataToExport: string;
    error: string;
  };
  tasks: {
    title: string;
    description: string;
    feature1: string;
    feature2: string;
    feature3: string;
    feature4: string;
    feature5: string;
    addTask: string;
    editTask: string;
    titlePlaceholder: string;
    descriptionLabel: string;
    todo: string;
    inProgress: string;
    done: string;
    deleteTaskConfirmTitle: string;
    taskUpdated: string;
    taskDeleted: string;
    taskAdded: string;
  };
  website: {
    title: string;
    description: string;
    feature1: string;
    feature2: string;
    feature3: string;
    feature4: string;
    feature5: string;
  };
  cta: {
    title: string;
    subtitle: string;
    button: string;
  };
  footer: {
    copyright: string;
    terms: string;
    privacy: string;
    description: string;
    navigation: string;
    legal: string;
    termsAndPrivacy: string;
    rights: string;
  };
  business: {
    events: string;
    health: string;
    sports: string;
    beauty: string;
    personal: string;
    education: string;
    eventsDesc: string;
    healthDesc: string;
    sportsDesc: string;
    beautyDesc: string;
    personalDesc: string;
    educationDesc: string;
    myBusiness: string;
    businessProfile: string;
    bookingRequests: string;
    pendingRequests: string;
    approvedRequests: string;
    rejectedRequests: string;
    noPendingRequests: string;
    noApprovedRequests: string;
    noRejectedRequests: string;
    pendingRequestsDescription: string;
    approvedRequestsDescription: string;
    rejectedRequestsDescription: string;
    editBusinessProfile: string;
    chooseFile: string;
    noFileChosen: string;
    supportedFormats: string;
    uploadImageCover: string;
    publicPageUrl: string;
    notFound: string;
    notFoundDescription: string;
    viewPublicPage: string;
    customer: string;
    title: string;
    dateTime: string;
    actions: string;
    approve: string;
    reject: string;
    delete: string;
    deleteBookingRequest: string;
    deleteConfirmation: string;
    businessName: string;
    urlSlug: string;
    description: string;
    coverPhoto: string;
    phone: string;
    email: string;
    website: string;
    address: string;
    updateProfile: string;
    availableTimes: string;
    clickToRequest: string;
    contactInformation: string;
    scanQrCode: string;
    qrCodeTooltip: string;
    shareQRCode: string;
    shareViaSocial: string;
    viewLargerQRCode: string;
    copiedToClipboard: string;
    share: string;
    shareSuccess: string;
  };
  dashboard: {
    welcome: string;
    greeting: string;
    goodMorning: string;
    goodAfternoon: string;
    goodEvening: string;
    goodNight: string;
    overview: string;
    calendar: string;
    bookingCalendar: string;
    tasks: string;
    reminders: string;
    notes: string;
    business: string;
    stats: string;
    statistics: string;
    crm: string;
    signOut: string;
    darkMode: string;
    lightMode: string;
    systemMode: string;
    more: string;
    addEvent: string;
    day: string;
    week: string;
    month: string;
    totalTasks: string;
    completed: string;
    inProgress: string;
    todo: string;
    totalEvents: string;
    partlyPaid: string;
    fullyPaid: string;
    totalIncome: string;
    fromAllEvents: string;
    exportSuccessful: string;
    exportSuccessMessage: string;
    changePassword: string;
    subtitle: string;
    profile: string;
    category: string;
    details: string;
    additionalInfo: string;
    taskStatistics: string;
    eventStatistics: string;
    financialSummary: string;
    summaryStatistics: string;
    eventsData: string;
    totalCustomers: string;
    withBooking: string;
    withoutBooking: string;
  };
  events: {
    submitBookingRequest: string;
    fullNameRequired: string;
    fullName: string;
    phoneNumber: string;
    phoneNumberRequired: string;
    validEmailRequired: string;
    validDatesRequired: string;
    paymentStatus: string;
    selectPaymentStatus: string;
    paymentAmount: string;
    startDateTime: string;
    endDateTime: string;
    eventNotes: string;
    addEventNotes: string;
    editEvent: string;
    addNewEvent: string;
    updateEvent: string;
    createEvent: string;
    deleteEvent: string;
    eventDeleted: string;
    eventUpdated: string;
    eventCreated: string;
    timeSlotUnavailable: string;
    timeSlotConflict: string;
    timeSlotNotAvailable: string;
    socialLinkEmail: string;
    dateAndTime: string;
    date: string;
    time: string;
    start: string;
    end: string;
    eventDetails: string;
    title: string;
    bookAppointment: string;
    submitRequest: string;
  };
  contact: {
    email: string;
    getInTouch: string;
    contactInfo: string;
    phone: string;
    address: string;
    addressLine1: string;
    addressLine2: string;
    businessHours: string;
    workingHours: string;
    weekendHours: string;
    sendMessage: string;
    name: string;
    namePlaceholder: string;
    emailPlaceholder: string;
    message: string;
    messagePlaceholder: string;
    send: string;
    sending: string;
    messageSent: string;
    messageSentDesc: string;
    error: string;
    errorDesc: string;
  };
  calendar: {
    attachment: string;
    day: string;
    week: string;
    month: string;
    addEvent: string;
    bookNow: string;
    weekOf: string;
  };
  common: {
    success: string;
    error: string;
    warning: string;
    cancel: string;
    submitting: string;
    create: string;
    update: string;
    delete: string;
    errorOccurred: string;
    and: string;
    loading: string;
    rateLimitReached: string;
    waitBeforeBooking: string;
    rateLimitMessage: string;
    waitTimeRemaining: string;
    of: string;
    attachments: string;
    refreshing: string;
    copiedToClipboard: string;
    copyError: string;
    deleteSuccess: string;
    deleteError: string;
    missingUserInfo: string;
    new: string;
    request: string;
    requests: string;
    backToHome: string;
    supportedFormats: string;
    deleteConfirmMessage: string;
    noDescription: string;
    deleteConfirmTitle: string;
    successMessage: string;
    authRequired: string;
    save: string;
    saving: string;
    shareQRCode: string;
  };
  auth: {
    welcome: string;
    description: string;
    signInButton: string;
    signUpButton: string;
    emailLabel: string;
    passwordLabel: string;
    usernameLabel: string;
    forgotPassword: string;
    noAccount: string;
    haveAccount: string;
    signInCta: string;
    signUpCta: string;
    agreeToTerms: string;
    requiredField: string;
    invalidEmail: string;
    passwordMinLength: string;
    passwordMatch: string;
    confirmPassword: string;
    resetPassword: string;
    resetPasswordCta: string;
    resetPasswordSuccess: string;
    resetPasswordError: string;
    signInError: string;
    signUpError: string;
    businessNameLabel: string;
    businessTypeLabel: string;
    selectBusinessType: string;
    fullNameLabel: string;
    fullName: string;
    phoneLabel: string;
    terms: string;
    privacy: string;
    and: string;
    resetInstructions: string;
    passwordRequirements: string;
    confirmPasswordLabel: string;
    signingIn: string;
    signingUp: string;
    loading: string;
    enterEmail: string;
    redeemCode: string;
    redeemCodeOptional: string;
    enterRedeemCode: string;
    sendResetLink: string;
    backToSignIn: string;
    passwordsDoNotMatch: string;
    passwordTooShort: string;
    verificationRequired: string;
    checkEmailFolders: string;
    signOutSuccess: string;
  };
  legal: {
    title: string;
    lastUpdated: string;
    termsOfService: string;
    welcomeText: string;
    generalInfo: {
      title: string;
      companyName: string;
      registered: string;
      contact: string;
    };
    eligibility: {
      title: string;
      description: string;
    };
    accountSecurity: {
      title: string;
      requirements: string[];
    };
  };
  bookings: {
    approvedBooking: string;
    requestRejected: string;
    requestDeleted: string;
    newRequest: string;
    pendingRequestsCount: string;
    requestApproved: string;
    requestSubmitted: string;
    requestSubmittedDescription: string;
  };
  notes: {
    title: string;
    titlePlaceholder: string;
    titleRequired: string;
    content: string;
    contentPlaceholder: string;
    addNewNote: string;
    noteAdded: string;
    noteAddedDescription: string;
    noteUpdated: string;
    noteDeleted: string;
  };
  reminders: {
    reminderCreated: string;
  };
};

export type LanguageContextType = {
  language: Language;
  setLanguage: (language: Language) => void;
  t: (key: string, params?: Record<string, string | number>) => string;
};
