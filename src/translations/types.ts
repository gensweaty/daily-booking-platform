export interface Translation {
  auth: AuthType;
  common: CommonType;
  crm: CRMType;
  dashboard: DashboardType;
  onboarding: OnboardingType;
  settings: SettingsType;
  tasks: TasksType;
  reminders: RemindersType;
  notes: NotesType;
  files: FilesType;
  businessProfile: BusinessProfileType;
  bookingRequests: BookingRequestsType;
  events: EventsType;
}

interface AuthType {
  login: string;
  register: string;
  logout: string;
  email: string;
  password: string;
  name: string;
  surname: string;
  phone: string;
  address: string;
  website: string;
  description: string;
  logo: string;
  cover: string;
  forgotPassword: string;
  resetPassword: string;
  confirmPassword: string;
  signInWithGoogle: string;
  signInWithFacebook: string;
  signUpWithGoogle: string;
  signUpWithFacebook: string;
  invalidEmail: string;
  invalidPassword: string;
  passwordNotMatch: string;
  registerSuccess: string;
  loginSuccess: string;
  logoutSuccess: string;
  resetPasswordSuccess: string;
  resetPasswordError: string;
  confirmPasswordError: string;
  profileUpdateSuccess: string;
  profileUpdateError: string;
  uploadLogo: string;
  uploadCover: string;
  uploadError: string;
  deleteLogo: string;
  deleteCover: string;
  deleteLogoSuccess: string;
  deleteCoverSuccess: string;
  deleteLogoError: string;
  deleteCoverError: string;
  invalidName: string;
  invalidSurname: string;
  invalidPhone: string;
  invalidAddress: string;
  invalidWebsite: string;
  invalidDescription: string;
  invalidLogo: string;
  invalidCover: string;
  invalidConfirmPassword: string;
  invalidResetPassword: string;
  invalidForgotPassword: string;
  invalidSignInWithGoogle: string;
  invalidSignInWithFacebook: string;
  invalidSignUpWithGoogle: string;
  invalidSignUpWithFacebook: string;
  invalidRegisterSuccess: string;
  invalidLoginSuccess: string;
  invalidLogoutSuccess: string;
  invalidResetPasswordSuccess: string;
  invalidResetPasswordError: string;
  invalidConfirmPasswordError: string;
  invalidProfileUpdateSuccess: string;
  invalidProfileUpdateError: string;
  invalidUploadLogo: string;
  invalidUploadCover: string;
  invalidUploadError: string;
  invalidDeleteLogo: string;
  invalidDeleteCover: string;
  invalidDeleteLogoSuccess: string;
  invalidDeleteCoverSuccess: string;
}

interface CommonType {
  loading: string;
  error: string;
  success: string;
  save: string;
  edit: string;
  cancel: string;
  delete: string;
  confirm: string;
  logout: string;
  search: string;
  create: string;
  update: string;
  view: string;
  name: string;
  description: string;
  details: string;
  createdAt: string;
  updatedAt: string;
  attachments: string;
  upload: string;
  download: string;
  language: string;
  english: string;
  spanish: string;
  georgian: string;
  close: string;
  add: string;
  remove: string;
  file: string;
  filename: string;
  size: string;
  contentType: string;
  actions: string;
  noData: string;
  yes: string;
  no: string;
  areYouSure: string;
  ok: string;
  somethingWentWrong: string;
  home: string;
  back: string;
  continue: string;
  skip: string;
  finish: string;
  previous: string;
  next: string;
  today: string;
  yesterday: string;
  tomorrow: string;
  thisWeek: string;
  thisMonth: string;
  thisYear: string;
  all: string;
  clear: string;
  apply: string;
  filters: string;
  reset: string;
  export: string;
  import: string;
  id: string;
  status: string;
  priority: string;
  type: string;
  category: string;
  tags: string;
  notes: string;
  location: string;
  date: string;
  time: string;
  dateAndTime: string;
  from: string;
  to: string;
  select: string;
  selectAll: string;
  unselectAll: string;
  selected: string;
  items: string;
  page: string;
  of: string;
  showing: string;
  results: string;
  noResults: string;
  goToPage: string;
  rowsPerPage: string;
  firstPage: string;
  lastPage: string;
  nextPage: string;
  previousPage: string;
  pageInfo: string;
  totalItems: string;
  item: string;
  areYouSureDelete: string;
  permanentlyDelete: string;
  confirmDelete: string;
  cancelDelete: string;
  deleteSuccess: string;
  deleteError: string;
  editSuccess: string;
  editError: string;
  createSuccess: string;
  createError: string;
  saveSuccess: string;
  saveError: string;
  uploadSuccess: string;
  uploadError: string;
  downloadSuccess: string;
  downloadError: string;
  importSuccess: string;
  importError: string;
  exportSuccess: string;
  exportError: string;
  invalidName: string;
  invalidDescription: string;
  invalidDetails: string;
  invalidCreatedAt: string;
  invalidUpdatedAt: string;
  invalidAttachments: string;
  invalidUpload: string;
  invalidDownload: string;
  invalidLanguage: string;
  invalidEnglish: string;
  invalidSpanish: string;
  invalidGeorgian: string;
  invalidClose: string;
  invalidAdd: string;
  invalidRemove: string;
  invalidFile: string;
  invalidFilename: string;
  invalidSize: string;
  invalidContentType: string;
  invalidActions: string;
  invalidNoData: string;
  invalidYes: string;
  invalidNo: string;
  invalidAreYouSure: string;
  invalidOk: string;
  invalidSomethingWentWrong: string;
  invalidHome: string;
  invalidBack: string;
  invalidContinue: string;
  invalidSkip: string;
  invalidFinish: string;
  invalidPrevious: string;
  invalidNext: string;
  invalidToday: string;
  invalidYesterday: string;
  invalidTomorrow: string;
}

interface CRMType {
  customers: string;
  customer: string;
  newCustomer: string;
  editCustomer: string;
  viewCustomer: string;
  customerDetails: string;
  customerList: string;
  addCustomer: string;
  updateCustomer: string;
  deleteCustomer: string;
  importCustomers: string;
  exportCustomers: string;
  customerName: string;
  customerEmail: string;
  customerPhone: string;
  customerAddress: string;
  customerNotes: string;
  customerTags: string;
  customerCategory: string;
  customerStatus: string;
  customerPriority: string;
  customerType: string;
  customerSince: string;
  customerOrders: string;
  customerInvoices: string;
  customerPayments: string;
  customerTasks: string;
  customerReminders: string;
  customerNotesList: string;
  customerFiles: string;
  customerCreatedAt: string;
  customerUpdatedAt: string;
  customerActions: string;
  customerNoData: string;
  customerAreYouSure: string;
  customerDeleteSuccess: string;
  customerDeleteError: string;
  customerEditSuccess: string;
  customerEditError: string;
  customerCreateSuccess: string;
  customerCreateError: string;
  customerSaveSuccess: string;
  customerSaveError: string;
  customerUploadSuccess: string;
  customerUploadError: string;
  customerDownloadSuccess: string;
  customerDownloadError: string;
  customerImportSuccess: string;
  customerImportError: string;
  customerExportSuccess: string;
  customerExportError: string;
  customerInvalidName: string;
  customerInvalidEmail: string;
  customerInvalidPhone: string;
  customerInvalidAddress: string;
  customerInvalidNotes: string;
  customerInvalidTags: string;
  customerInvalidCategory: string;
  customerInvalidStatus: string;
  customerInvalidPriority: string;
  customerInvalidType: string;
  customerInvalidSince: string;
  customerInvalidOrders: string;
  customerInvalidInvoices: string;
  customerInvalidPayments: string;
  customerInvalidTasks: string;
  customerInvalidReminders: string;
  customerInvalidNotesList: string;
  customerInvalidFiles: string;
  customerInvalidCreatedAt: string;
  customerInvalidUpdatedAt: string;
  customerInvalidActions: string;
  customerInvalidNoData: string;
  customerInvalidAreYouSure: string;
  customerInvalidDeleteSuccess: string;
  customerInvalidDeleteError: string;
  customerInvalidEditSuccess: string;
  customerInvalidEditError: string;
  customerInvalidCreateSuccess: string;
  customerInvalidCreateError: string;
  customerInvalidSaveSuccess: string;
  customerInvalidSaveError: string;
  customerInvalidUploadSuccess: string;
  customerInvalidUploadError: string;
  customerInvalidDownloadSuccess: string;
  customerInvalidDownloadError: string;
  customerInvalidImportSuccess: string;
  customerInvalidImportError: string;
  customerInvalidExportSuccess: string;
  customerInvalidExportError: string;
  notPaid: string;
  paidPartly: string;
  paidFully: string;
}

interface DashboardType {
  title: string;
  welcome: string;
  statistics: string;
  tasks: string;
  reminders: string;
  notes: string;
  files: string;
  customers: string;
  orders: string;
  invoices: string;
  payments: string;
  reports: string;
  settings: string;
  logout: string;
  profile: string;
  editProfile: string;
  viewProfile: string;
  changePassword: string;
  notifications: string;
  messages: string;
  support: string;
  faq: string;
  contactUs: string;
  aboutUs: string;
  termsOfService: string;
  privacyPolicy: string;
  version: string;
  copyright: string;
  allRightsReserved: string;
  createdBy: string;
  designedBy: string;
  developedBy: string;
  poweredBy: string;
  statisticsTitle: string;
  statisticsDescription: string;
  tasksTitle: string;
  tasksDescription: string;
  remindersTitle: string;
  remindersDescription: string;
  notesTitle: string;
  notesDescription: string;
  filesTitle: string;
  filesDescription: string;
  customersTitle: string;
  customersDescription: string;
  ordersTitle: string;
  ordersDescription: string;
  invoicesTitle: string;
  invoicesDescription: string;
  paymentsTitle: string;
  paymentsDescription: string;
  reportsTitle: string;
  reportsDescription: string;
  settingsTitle: string;
  settingsDescription: string;
  logoutTitle: string;
  logoutDescription: string;
  profileTitle: string;
  profileDescription: string;
  editProfileTitle: string;
  editProfileDescription: string;
  viewProfileTitle: string;
  viewProfileDescription: string;
  changePasswordTitle: string;
  changePasswordDescription: string;
  notificationsTitle: string;
  notificationsDescription: string;
  messagesTitle: string;
  messagesDescription: string;
  supportTitle: string;
  supportDescription: string;
  faqTitle: string;
  faqDescription: string;
  contactUsTitle: string;
  contactUsDescription: string;
  aboutUsTitle: string;
  aboutUsDescription: string;
  termsOfServiceTitle: string;
  termsOfServiceDescription: string;
  privacyPolicyTitle: string;
  privacyPolicyDescription: string;
  versionTitle: string;
  versionDescription: string;
  copyrightTitle: string;
  copyrightDescription: string;
  allRightsReservedTitle: string;
  allRightsReservedDescription: string;
  createdByTitle: string;
  createdById: string;
  designedByTitle: string;
  designedById: string;
  developedByTitle: string;
  developedById: string;
  poweredByTitle: string;
  poweredById: string;
  invalidTitle: string;
  invalidWelcome: string;
}

interface OnboardingType {
  step1Title: string;
  step1Description: string;
  step2Title: string;
  step2Description: string;
  step3Title: string;
  step3Description: string;
  step4Title: string;
  step4Description: string;
  step5Title: string;
  step5Description: string;
  step6Title: string;
  step6Description: string;
  step7Title: string;
  step7Description: string;
  step8Title: string;
  step8Description: string;
  step9Title: string;
  step9Description: string;
  step10Title: string;
  step10Description: string;
  invalidStep1Title: string;
  invalidStep1Description: string;
}

interface SettingsType {
  title: string;
  profile: string;
  account: string;
  security: string;
  notifications: string;
  appearance: string;
  language: string;
  general: string;
  advanced: string;
  invalidTitle: string;
  invalidProfile: string;
}

interface TasksType {
  title: string;
  newTask: string;
  editTask: string;
  viewTask: string;
  taskList: string;
  addTask: string;
  updateTask: string;
  deleteTask: string;
  taskName: string;
  taskDescription: string;
  taskStatus: string;
  taskPriority: string;
  taskCategory: string;
  taskTags: string;
  taskNotes: string;
  taskCreatedAt: string;
  taskUpdatedAt: string;
  taskActions: string;
  taskNoData: string;
  taskAreYouSure: string;
  taskDeleteSuccess: string;
  taskDeleteError: string;
  taskEditSuccess: string;
  taskEditError: string;
  taskCreateSuccess: string;
  taskCreateError: string;
  taskSaveSuccess: string;
  taskSaveError: string;
  taskUploadSuccess: string;
  taskUploadError: string;
  taskDownloadSuccess: string;
  taskDownloadError: string;
  taskImportSuccess: string;
  taskImportError: string;
  taskExportSuccess: string;
  taskExportError: string;
  taskInvalidName: string;
  taskInvalidDescription: string;
}

interface RemindersType {
  title: string;
  newReminder: string;
  editReminder: string;
  viewReminder: string;
  reminderList: string;
  addReminder: string;
  updateReminder: string;
  deleteReminder: string;
  reminderName: string;
  reminderDescription: string;
  reminderDate: string;
  reminderTime: string;
  reminderNotes: string;
  reminderCreatedAt: string;
  reminderUpdatedAt: string;
  reminderActions: string;
  reminderNoData: string;
  reminderAreYouSure: string;
  reminderDeleteSuccess: string;
  reminderDeleteError: string;
}

interface NotesType {
  title: string;
  newNote: string;
  editNote: string;
  viewNote: string;
  noteList: string;
  addNote: string;
  updateNote: string;
  deleteNote: string;
  noteName: string;
  noteDescription: string;
  noteCategory: string;
  noteTags: string;
  noteNotes: string;
  noteCreatedAt: string;
  noteUpdatedAt: string;
  noteActions: string;
  noteNoData: string;
  noteAreYouSure: string;
  noteDeleteSuccess: string;
  noteDeleteError: string;
}

interface FilesType {
  title: string;
  newFile: string;
  editFile: string;
  viewFile: string;
  fileList: string;
  addFile: string;
  updateFile: string;
  deleteFile: string;
  fileName: string;
  fileDescription: string;
  fileCategory: string;
  fileTags: string;
  fileNotes: string;
  fileCreatedAt: string;
  fileUpdatedAt: string;
  fileActions: string;
  fileNoData: string;
  fileAreYouSure: string;
  fileDeleteSuccess: string;
  fileDeleteError: string;
}

interface BusinessProfileType {
  title: string;
  newBusinessProfile: string;
  editBusinessProfile: string;
  viewBusinessProfile: string;
  businessProfileList: string;
  addBusinessProfile: string;
  updateBusinessProfile: string;
  deleteBusinessProfile: string;
  businessProfileName: string;
  businessProfileDescription: string;
  businessProfileCategory: string;
  businessProfileTags: string;
  businessProfileNotes: string;
  businessProfileCreatedAt: string;
  businessProfileUpdatedAt: string;
  businessProfileActions: string;
  businessProfileNoData: string;
  businessProfileAreYouSure: string;
  businessProfileDeleteSuccess: string;
  businessProfileDeleteError: string;
  businessName: string;
  contactPhone: string;
  contactEmail: string;
  contactAddress: string;
  contactWebsite: string;
  coverPhoto: string;
  invalidBusinessName: string;
  invalidContactPhone: string;
  invalidContactEmail: string;
  invalidContactAddress: string;
  invalidContactWebsite: string;
  invalidCoverPhoto: string;
}

interface BookingRequestsType {
  title: string;
  newBookingRequest: string;
  editBookingRequest: string;
  viewBookingRequest: string;
  bookingRequestList: string;
  addBookingRequest: string;
  updateBookingRequest: string;
  deleteBookingRequest: string;
  bookingRequestName: string;
  bookingRequestDescription: string;
  bookingRequestCategory: string;
  bookingRequestTags: string;
  bookingRequestNotes: string;
  bookingRequestCreatedAt: string;
  bookingRequestUpdatedAt: string;
  bookingRequestActions: string;
  bookingRequestNoData: string;
  bookingRequestAreYouSure: string;
  bookingRequestDeleteSuccess: string;
  bookingRequestDeleteError: string;
  requesterName: string;
  requesterEmail: string;
  requesterPhone: string;
  startDate: string;
  endDate: string;
  invalidRequesterName: string;
  invalidRequesterEmail: string;
  invalidRequesterPhone: string;
  invalidStartDate: string;
  invalidEndDate: string;
  approved: string;
  rejected: string;
  pending: string;
  bookingRequestStatus: string;
  invalidBookingRequestStatus: string;
}

interface EventsType {
  title: string;
  newEvent: string;
  editEvent: string;
  viewEvent: string;
  eventList: string;
  addEvent: string;
  updateEvent: string;
  deleteEvent: string;
  eventName: string;
  eventDescription: string;
  eventCategory: string;
  eventTags: string;
  eventNotes: string;
  eventCreatedAt: string;
  eventUpdatedAt: string;
  eventActions: string;
  eventNoData: string;
  eventAreYouSure: string;
  eventDeleteSuccess: string;
  eventDeleteError: string;
  start: string;
  end: string;
  dateAndTime: string;
  fullName: string;
  phoneNumber: string;
  socialLinkEmail: string;
  addEventNotes: string;
  paymentStatus: string;
  selectPaymentStatus: string;
  paymentAmount: string;
  invalidEventName: string;
  invalidEventDescription: string;
  invalidStart: string;
  invalidEnd: string;
  invalidDateAndTime: string;
  invalidFullName: string;
  invalidPhoneNumber: string;
  invalidSocialLinkEmail: string;
  invalidAddEventNotes: string;
  invalidPaymentStatus: string;
  invalidSelectPaymentStatus: string;
  invalidPaymentAmount: string;
  createdAtLabel: string;
  lastUpdatedLabel: string;
}
