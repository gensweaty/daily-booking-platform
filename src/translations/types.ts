
export type Language = 'en' | 'es' | 'ka';

export interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

export interface Translations {
  common: {
    success: string;
    error: string;
    saving: string;
    cancel: string;
    delete: string;
    edit: string;
    confirm: string;
    language: string;
    english: string;
    spanish: string;
    georgian: string;
    loading: string;
    fileDeleted: string;
    add: string;
    update: string;
    view: string;
    save: string;
    authRequired: string;
    missingUserInfo: string;
    uploadError: string;
    errorOccurred: string;
    deleteSuccess: string;
    deleteError: string;
    deleteConfirmTitle: string;
    deleteConfirmMessage: string;
    warning: string;
  };
  auth: {
    login: string;
    logout: string;
    register: string;
    name: string;
    email: string;
    password: string;
    confirmPassword: string;
    loggedIn: string;
    loggedOut: string;
    registerSuccess: string;
    registerError: string;
    loginError: string;
    passwordMismatch: string;
    registrationTitle: string;
    loginTitle: string;
    alreadyHaveAccount: string;
    dontHaveAccount: string;
    loginPrompt: string;
    signUpPrompt: string;
    forgotPasswordTitle: string;
    forgotPasswordPrompt: string;
    resetPasswordTitle: string;
    resetPasswordPrompt: string;
    sendResetEmail: string;
    backToLogin: string;
    resetEmailSent: string;
    resetPasswordSuccess: string;
    resetPasswordError: string;
    invalidResetToken: string;
    expiredResetToken: string;
    newPassword: string;
    profileTitle: string;
    forgotPassword: string;
    requiredEmail: string;
    surname: string;
  };
  tasks: {
    addTask: string;
    editTask: string;
    deleteTask: string;
    deleteTaskConfirmTitle: string;
    deleteTaskConfirmation: string;
    taskAdded: string;
    taskUpdated: string;
    taskDeleted: string;
    taskArchived: string;
    archive: string;
    emailMe: string;
    emailReminderTooltip: string;
    title: string;
  };
  reminders: {
    reminder: string;
    addReminder: string;
    editReminder: string;
    deleteReminder: string;
    reminderAdded: string;
    reminderUpdated: string;
    reminderDeleted: string;
    reminderTitle: string;
    reminderDescription: string;
    reminderDueDate: string;
    title: string;
    reminderAddError: string;
  };
  notes: {
    note: string;
    addNote: string;
    editNote: string;
    deleteNote: string;
    noteAdded: string;
    noteUpdated: string;
    noteDeleted: string;
    noteTitle: string;
    noteContent: string;
    noteCategory: string;
    noteColor: string;
    noteCreationDate: string;
    title: string;
  };
  settings: {
    settings: string;
    profileSettings: string;
    businessSettings: string;
    notificationSettings: string;
    accountSettings: string;
    securitySettings: string;
    languageSettings: string;
    themeSettings: string;
    generalSettings: string;
    title: string;
  };
  events: {
    addEvent: string;
    editEvent: string;
    deleteEvent: string;
    eventAdded: string;
    eventUpdated: string;
    eventDeleted: string;
    eventTitle: string;
    eventDescription: string;
    eventStartDate: string;
    eventEndDate: string;
    eventLocation: string;
    eventCategory: string;
    eventColor: string;
    eventCreationDate: string;
    recurringEventCreated: string;
    eventCreated: string;
    seriesDeleted: string;
  };
  bookings: {
    requestBooking: string;
    bookingDetails: string;
    requesterName: string;
    requesterEmail: string;
    requesterPhone: string;
    title: string;
    description: string;
    startDate: string;
    endDate: string;
    status: string;
    pending: string;
    approved: string;
    rejected: string;
    approve: string;
    reject: string;
    bookingApproved: string;
    bookingRejected: string;
    bookingRequested: string;
    bookingRequestError: string;
    bookingRequestSuccess: string;
    bookingRequestTitle: string;
    bookingRequestDescription: string;
    bookingRequestStartDate: string;
    bookingRequestEndDate: string;
    bookingRequestStatus: string;
    bookingRequestApprove: string;
    bookingRequestReject: string;
    bookingRequestApproved: string;
    bookingRequestRejected: string;
    bookingRequestRequested: string;
    bookingRequestFileUpload: string;
    bookingRequestFileDescription: string;
    newBooking: string;
  };
  files: {
    file: string;
    addFile: string;
    editFile: string;
    deleteFile: string;
    fileAdded: string;
    fileUpdated: string;
    fileDeleted: string;
    fileName: string;
    fileDescription: string;
    fileCategory: string;
    fileSize: string;
    fileType: string;
    fileUploadDate: string;
    filename: string;
  };
  customers: {
    customer: string;
    addCustomer: string;
    editCustomer: string;
    deleteCustomer: string;
    customerAdded: string;
    customerUpdated: string;
    customerDeleted: string;
    customerName: string;
    customerEmail: string;
    customerPhone: string;
    customerAddress: string;
    customerNotes: string;
    customerCreationDate: string;
    name: string;
  };
  subscriptions: {
    subscription: string;
    subscribe: string;
    unsubscribe: string;
    subscriptionAdded: string;
    subscriptionUpdated: string;
    subscriptionDeleted: string;
    subscriptionName: string;
    subscriptionDescription: string;
    subscriptionPrice: string;
    subscriptionDuration: string;
    subscriptionStatus: string;
    subscriptionCreationDate: string;
    subscriptionFaq: string;
    subscriptionType: string;
  };
  contacts: {
    contact: string;
    addContact: string;
    editContact: string;
    deleteContact: string;
    contactAdded: string;
    contactUpdated: string;
    contactDeleted: string;
    contactName: string;
    contactEmail: string;
    contactPhone: string;
    contactAddress: string;
    contactNotes: string;
    contactCreationDate: string;
    contactMessage: string;
  };
  crm: {
    customerCreated: string;
    customerUpdated: string;
    eventCreationFailed: string;
    eventUpdateFailed: string;
  };
}

export type TranslationType = Translations;
